[{"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\index.js":"1","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\App.js":"2","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\index.js":"3","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Button\\Button.js":"4","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Header\\Header.js":"5","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Task\\Task.js":"6","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Tasks\\Tasks.js":"7","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\AddTask\\AddTask.js":"8","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Footer\\Footer.js":"9","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\pages\\About\\About.js":"10","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\pages\\Dashboard\\Dashboard.js":"11","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\CompletedTasks\\CompletedTasks.js":"12"},{"size":227,"mtime":1613139978346,"results":"13","hashOfConfig":"14"},{"size":704,"mtime":1612629837578,"results":"15","hashOfConfig":"14"},{"size":394,"mtime":1615123884051,"results":"16","hashOfConfig":"14"},{"size":653,"mtime":1615127028511,"results":"17","hashOfConfig":"14"},{"size":1257,"mtime":1615115837313,"results":"18","hashOfConfig":"14"},{"size":1261,"mtime":1615122763113,"results":"19","hashOfConfig":"14"},{"size":704,"mtime":1615118461014,"results":"20","hashOfConfig":"14"},{"size":2527,"mtime":1615121170248,"results":"21","hashOfConfig":"14"},{"size":304,"mtime":1613159419197,"results":"22","hashOfConfig":"14"},{"size":2139,"mtime":1615130656597,"results":"23","hashOfConfig":"14"},{"size":4051,"mtime":1615126430616,"results":"24","hashOfConfig":"14"},{"size":1565,"mtime":1615122774483,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1s5338e",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\index.js",[],["53","54"],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\App.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\index.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Button\\Button.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Header\\Header.js",[],["55","56"],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Task\\Task.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Tasks\\Tasks.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\AddTask\\AddTask.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\pages\\About\\About.js",[],"C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\pages\\Dashboard\\Dashboard.js",["57"],"import { useState, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { AddTask, Tasks, CompletedTasks } from \"../../components\";\r\nimport \"./Dashboard.scss\";\r\n\r\nconst Dashboard = (props) => {\r\n  const [activeTasks, setActiveTasks] = useState([]);\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks();\r\n\r\n      setActiveTasks(tasksFromServer.filter((task) => {\r\n        return task.completed === false;\r\n      }));\r\n\r\n      setCompletedTasks(tasksFromServer.filter((task) => {\r\n        return task.completed === true;\r\n      }));\r\n    };\r\n\r\n    getTasks();\r\n  }, []);\r\n\r\n  // Fetch All Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch(\"http://localhost:3008/tasks\");\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  // Fetch Task by ID\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:3008/tasks/${id}`);\r\n    const data = await res.json();\r\n\r\n    return data;\r\n  };\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch(\"http://localhost:3008/tasks\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n\r\n    const data = await res.json();\r\n\r\n    setActiveTasks([...activeTasks, data]);\r\n  };\r\n\r\n  // Complete Task\r\n  const completeTask = async (id) => {\r\n    const taskToComplete = await fetchTask(id);\r\n    const taskWithCompletedStatus = {\r\n      ...taskToComplete,\r\n      completed: !taskToComplete.completed,\r\n    };\r\n\r\n    const res = await fetch(`http://localhost:3008/tasks/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(taskWithCompletedStatus)\r\n    })\r\n\r\n    const data = await res.json();\r\n\r\n    if (taskToComplete.completed === false) {\r\n      setActiveTasks(activeTasks.filter((task) => task.id !== id));\r\n      setCompletedTasks([...completedTasks, taskToComplete]);\r\n    } else {\r\n      setCompletedTasks(completedTasks.filter((task) => task.id !== id));\r\n      setActiveTasks([...activeTasks, taskToComplete]);\r\n    }\r\n  };\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:3008/tasks/${id}`, {\r\n      method: \"DELETE\"\r\n    })\r\n\r\n    setActiveTasks(activeTasks.filter((task) => task.id !== id));\r\n    setCompletedTasks(completedTasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id);\r\n\r\n    if (taskToToggle.date !== \"\") {\r\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\r\n\r\n      const res = await fetch(`http://localhost:3008/tasks/${id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(updTask)\r\n      })\r\n\r\n      const data = await res.json();\r\n\r\n\r\n      taskToToggle.completed === false\r\n        ? setActiveTasks(activeTasks.map((task) => \r\n            task.id === id ? { ...task, reminder: data.reminder } : task)\r\n          )\r\n        : setCompletedTasks(completedTasks.map((task) => \r\n            task.id === id ? { ...task, reminder: data.reminder } : task)\r\n          );\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <main className=\"dashboard\">\r\n      <div>\r\n        <AddTask showAddForm={props.showAddForm} onAdd={addTask} />\r\n\r\n        {activeTasks?.length > 0\r\n          ? <Tasks\r\n              tasks={activeTasks}\r\n              onComplete={completeTask}\r\n              onDelete={deleteTask}\r\n              onToggle={toggleReminder}\r\n            />\r\n          : \"No tasks\"\r\n        }\r\n      </div>\r\n      <CompletedTasks\r\n        tasks={completedTasks}\r\n        onComplete={completeTask}\r\n        onDelete={deleteTask}\r\n      />\r\n    </main>\r\n  )\r\n}\r\n\r\nDashboard.protoTypes = {\r\n  showAddForm: PropTypes.bool,\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\pauli\\Desktop\\GitHub\\task-tracker\\src\\components\\CompletedTasks\\CompletedTasks.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":73,"column":11,"nodeType":"66","messageId":"67","endLine":73,"endColumn":15},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]